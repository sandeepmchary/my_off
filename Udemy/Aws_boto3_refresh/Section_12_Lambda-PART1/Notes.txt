Requirements for aws lambda functions:
  - Provide handler
    - handler is one type of functions
    - handler is the entry point for lambda,starts the execution from this handler function
	- A lambda function accepts JSON-formatted input and will some time returns in json or some string
	- We need to specify the run-time env for the lambda.
	- The final requirement is trigger
	  - we can configure a lambda function in response to an event,such as new file upload to s3,a change in DynamoDB table or the timer trigger by AWS cloudwatch
*******************************************************************************************
   - first we enter into lambda page
   - then create function
   - under IAM 
   - choose roles
   - choose lambda
   - next permissions
   - search for ec2 or s3 
   - select it
   - name it
   - create role
*******************************************************************************************
37) start stop the ec2 instances
   - Every day
     - Start ec2 instances at 8am Mon-Fri
     - Stop ec2 instances at 5 pm Mon-Fri
     ==========================
     Step1:
          - create a role for lambda function
     Step2:
          - write a lambda function using boto3
    --------------------------------------------------
    in the lambda function page
      - go to trigger
      - add cloud watch
      - rule
      - create rule
          - create the corn jobs
            - * * * * * *
              0 8 ? * MON-FRI *
              cron(0 8 ? * MON-FRI *)
            - stop at 5 pm
               cron(0 17 ? * MON-FRI *)

*******************************************************************************************
import json
import boto3

def lambda_handler(event, context):
    ec2_re=boto3.resource('ec2')
    for each_in in ec2_re.instances.filter(Filters=[{"Name":"tag:Env","Values":["test"]}]):
    	print(each_in)
    return {
        'statusCode': 200,
        'body': json.dumps('Hello from Lambda!')
    }
*******************************************************************************************               
------------------------------------------------------------------------------
38)
for sns
  - Create topic --> Name --> Display name - optional --> Create subscription --> Protocol --> Email -->Endpoint
    --> email id --> go to email and confirm the subscription
after this go to cloud watch --> create rule --> Event patter --> service name --> ec2 --> Ec2 instance state
change notifications --> specific change --> running or stopped --> any instance or specific instance -->
Target --> Add target --> select the above written function --> configure details --> 

- Target arn should be same as Topic arn while creating for the subscription
*******************************************************************************************
import json
import boto3

def lambda_handler():
    ec2_re=boto3.resource('ec2')
    sns_cli=boto3.client('sns')
    my_ins = ec2_re.Instance('i-0532ec7cf1d7603ac')
    print(my_ins.state['Name'])
    sns_cli.publish(TargetArn="arn:aws:sns:us-east-1:122453661730:Mail_Alert",Message=my_ins.state['Name'])
lambda_handler()             
*******************************************************************************************
39)
  - code to list all EBS volumes based snapshots
  - 